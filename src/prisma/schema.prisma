// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ContentType {
  P
  H1
  H2
  H3
  LINK
  CODE
  IMAGE
}

enum UserType {
  ADMIN
  USER
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String
  hashedPassword String
  createdAt      DateTime  @default(now())
  type           UserType  @default(USER)
  posts          Post[]
  comments       Comment[]
  media          Media[]
}
model Post {
  id              Int            @id @default(autoincrement())
  title           String
  content         Content[]
  featuredImageId Int?
  featuredImage   Media?         @relation(fields: [featuredImageId], references: [id])
  publishedAt     DateTime       @default(now())
  authorId        Int
  author          User           @relation(fields: [authorId], references: [id])
  postCategories  PostCategory[]
  comments        Comment[]
  createdAt       DateTime       @default(now())
}

model Media {
  id        Int      @id @default(autoincrement())
  size      String   @default("0")
  createdAt DateTime @default(now())
  post      Post[]
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Content {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  data      String
  type      ContentType @default(P)
  postId    Int
  post      Post        @relation(fields: [postId], references: [id])
}

model PostCategory {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  postCategories PostCategory[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
